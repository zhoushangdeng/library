#!/usr/bin/env node

/**
 * Module dependencies.
 */
require('dotenv').config();

const app = require('../app');
const http = require('http');

const log = require('../Log').getLogger("Router:validate")

const { SERVER_PORT } = process.env;

/**
 * Get port from environment and store in Express.
 */
const port = SERVER_PORT || '6001';

const onError = (error) => {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

const server = http.createServer(app.callback());
server.listen(port);
server.on('error', onError);

/**
 * Event listener for HTTP server "listening" event.
 */
const onListening = () => {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  log.debug('Listening on ' + bind);
}

server.on('listening', onListening);

